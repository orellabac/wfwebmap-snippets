{
    "wm-controller": {
        "prefix":"wm-controller",
        "body":[
            "namespace ${1:namespace}",
            "{",
            "    using System.Collections;",
            "    using System.Collections.Generic;",
            "    using Microsoft.AspNetCore.Mvc;",
            "    using System.Data;",
            "    using System.Linq;",
            "    using Microsoft.Extensions.Logging;",
            "",
            "    [Route(\"api/[controller]\")]",
            "    [ApiController]",
            "    public class ${2:Controller} : ControllerBase",
            "    {",
            "        private ILogger<${2:Controller}> logger;",
            "",
            "        public ${2:Controller}(ILogger<${2:Controller}> logger) {",
            "            this.logger = logger;",
            "        }",
            "",
            "       [HttpGet(\"{id}\")]",
            "        public IEnumerable Get(WindowOne window)",
            "        {",
            "            this.logger.LogInformation($\"Start controller {nameof(${2:Controller})}\");",
            "            // ADD your code here",
            "           $0",
            "            this.logger.LogInformation($\"Finish controller {nameof(${2:Controller})}\");",
            "       }",
            "    }",
            "}"
        ],
        "description":"Example Controller Webmap"
    },   
    "wm-usings": {
        "prefix":"wm-usings",
        "body":[
            "using System;",
            "using Mobilize.Web;",
            "using Mobilize.WebMap.Common.Attributes;"
        ],
        "description":"Inserts Usings required by webmap"
    },
    "wm-prop": {
        "prefix":"wm-prop",
        "body":[
            "[Intercepted]",
            "public ${1:type} ${2:name} {get;set;} = new ${1:type}();"
        ],
        "description":"Adds a new property"
    },
    "wm-window": {
        "prefix":"wm-window",
        "body":[
            "namespace ${1:namespace}",
            "{",
            "   /// <summary>",
            "   /// NOTE: dataTransfer on angular component",
            "   /// should be: @dataTransfer([\"${1:namespace}.${2:class}\"])",
            "   /// </summary>",
            "  [Observable]",
            "  public partial class ${2:class} : Form {",
            "    public ${2:class}()",
            "         : base()",
            "    {",
            "      InitializeComponent();",
            "    }",
            "",
            "    [Designer]",
            "    private void InitializeComponent()",
            "    {",
            "       $0",
            "       this.FormBorderStyle = FormBorderStyle.FixedDialog;",
            "       this.MaximizeBox = true;",
            "       this.MinimizeBox = true;",
            "       this.Name = \"${2:class}\";",
            "       this.Text = \"${2:class}\";",
            "       this.Load   += new EventHandler(this.Form_Load);",
            "       this.Closed += new EventHandler(this.Form_Closed);",
            "    }",

            "",
            "    private void Form_Load(object sender, EventArgs eventArgs)",
            "    {",
            "    }",
            "",
            "    private void Form_Closed(object sender, EventArgs eventArgs)",
            "    {",
            "    }",
            "  }",
            "}"
        ],
        "description":"Window"
    }
}